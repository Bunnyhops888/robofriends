{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","components/ErrorBoundry.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","Component","onSearchChange","event","setState","target","value","state","fetch","then","Response","json","users","this","filterRobots","filter","toLowerCase","includes","length","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAkBeA,EAhBF,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAExB,OAEI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCkBLK,EAxBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAGf,OAEI,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACK,cAAC,EAAD,CAEDR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCGVC,EAfG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKV,UAAU,MAAf,SACA,uBACAA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCIHI,EAXA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAApE,SACKJ,EAAMK,YC4DJC,GC/DYC,Y,wDDUvB,aAAe,IAAD,8BACV,gBAeJC,eAAiB,SAACC,GAEd,EAAKC,SAAS,CAAEhB,YAAae,EAAME,OAAOC,SAhBtC,EAAKC,MAAQ,CACbxB,OAAQ,GACRK,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBoB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKR,SAAS,CAACrB,OAAQ6B,S,oBAWzC,WAEI,MAA+BC,KAAKN,MAA5BxB,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,YAEV0B,EAAe/B,EAAOgC,QAAO,SAAAhC,GAC/B,OAAOA,EAAOP,KAAKwC,cAAcC,SAAS7B,EAAY4B,kBAG1D,OAAQjC,EAAOmC,OAIP,sBAAKvC,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcwB,KAAKX,iBAC/B,cAAC,EAAD,UACC,cAAC,EAAD,CAAWnB,OAAQ+B,SAPvB,6C,GAjCMK,IAAMlB,YEETmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ed96ce49.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id} ) => {\r\n\r\n    return (\r\n    \r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n    \r\n\r\n    return (\r\n\r\n        <div>\r\n        {\r\n            robots.map((user, i) => {\r\n                return (\r\n                     <Card \r\n                    key={i}\r\n                    id={robots[i].id}\r\n                    name={robots[i].name}\r\n                    email={robots[i].email}/>\r\n                );\r\n            })\r\n        }\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n        <input \r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search' \r\n        placeholder='search robots'\r\n        onChange={searchChange}\r\n        />\r\n    \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default SearchBox; ","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\n\r\nimport  './App.css';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n            this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(Response=> Response.json())\r\n        .then(users=> this.setState({robots: users}))\r\n        \r\n\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n\r\n        this.setState({ searchfield: event.target.value })\r\n          \r\n    }\r\n\r\n    render() {\r\n\r\n        const { robots, searchfield} = this.state;\r\n\r\n        const filterRobots = robots.filter(robots => {\r\n            return robots.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n\r\n        return !robots.length ?\r\n            <h1>Loading</h1> :\r\n        \r\n             (\r\n                <div className='tc'> \r\n                <h1 className='f2'>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange} />\r\n               <Scroll>\r\n                <CardList  robots={filterRobots}/>\r\n                </Scroll>\r\n                </div>\r\n        \r\n            )\r\n        }\r\n\r\n        \r\n\r\n    }\r\n   \r\n\r\n\r\n\r\n\r\nexport default App;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError: true})\r\n\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return <h1>Ooops. That is not good</h1>\r\n        }\r\n\r\n        return this.props.children\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ErrorBoundry;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}